{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABET","LENGTH","App","useState","methodSort","setMethodSort","reset","setReset","reverse","setReverse","visibleGoods","goods","copyOfGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,cACXC,EAAS,YAyBR,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EA5BR,SAA0BC,EAA1B,GAA2D,IAAxBP,EAAuB,EAAvBA,WAAYI,EAAW,EAAXA,QACvCI,EAAW,YAAOD,GAexB,OAbIP,GACFQ,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQX,GACN,KAAKJ,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,EACKI,EAAYJ,UAGdI,EAQcM,CAAiBnB,EACpC,CAAEK,aAAYI,YAEhB,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWf,IAAeJ,EACtB,iBACA,0BACJqB,QAAS,WACPhB,EAAcL,GACdO,GAAS,IAPb,iCAaA,wBACEa,KAAK,SACLD,UAAWf,IAAeH,EACtB,oBACA,6BACJoB,QAAS,WACPhB,EAAcJ,GACdM,GAAS,IAPb,4BAaA,wBACEa,KAAK,SACLD,UAAWX,EACP,oBACA,6BACJa,QAAS,WACPd,GAAS,GACTE,GAAYD,IAPhB,qBAaCF,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPd,GAAS,GACTF,EAAc,IACdI,GAAW,IANf,sBAcJ,6BACGC,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7077d1ec.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABET = 'by alphabet';\nconst LENGTH = 'by length';\n\nfunction getPreparedGoods(goods, { methodSort, reverse }) {\n  const copyOfGoods = [...goods];\n\n  if (methodSort) {\n    copyOfGoods.sort((good1, good2) => {\n      switch (methodSort) {\n        case ALPHABET:\n          return good1.localeCompare(good2);\n        case LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport const App = () => {\n  const [methodSort, setMethodSort] = useState('');\n  const [reset, setReset] = useState(false);\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { methodSort, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={methodSort === ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => {\n            setMethodSort(ALPHABET);\n            setReset(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={methodSort === LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => {\n            setMethodSort(LENGTH);\n            setReset(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverse\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => {\n            setReset(true);\n            setReverse(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {reset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReset(false);\n              setMethodSort('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}