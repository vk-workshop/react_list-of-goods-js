{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABET","LENGTH","App","useState","methodSort","setMethodSort","reverse","setReverse","visibleGoods","goods","copyOfGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,cACXC,EAAS,YAyBR,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA3BR,SAA0BC,EAA1B,GAA2D,IAAxBL,EAAuB,EAAvBA,WAAYE,EAAW,EAAXA,QACvCI,EAAW,YAAOD,GAexB,OAbIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,EACKI,EAAYJ,UAGdI,EAOcM,CAAiBjB,EAAiB,CACrDK,aAAYE,YAQd,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAeJ,IAE7BoB,QAAS,WACPf,EAAcL,IANlB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAeH,IAE7BmB,QAAS,WACPf,EAAcJ,IANlB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAab,IAEfc,QAAS,WACPb,GAAYD,IANhB,sBAYEF,GAAcE,IACd,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WA/CjBf,EAAc,IACdE,GAAW,IA2CL,sBAYJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dae25a26.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABET = 'by alphabet';\nconst LENGTH = 'by length';\n\nfunction getPreparedGoods(goods, { methodSort, reverse }) {\n  const copyOfGoods = [...goods];\n\n  if (methodSort) {\n    copyOfGoods.sort((good1, good2) => {\n      switch (methodSort) {\n        case ALPHABET:\n          return good1.localeCompare(good2);\n        case LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport const App = () => {\n  const [methodSort, setMethodSort] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    methodSort, reverse,\n  });\n\n  const sortAndReverse = () => {\n    setMethodSort('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': methodSort !== ALPHABET,\n          })}\n          onClick={() => {\n            setMethodSort(ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': methodSort !== LENGTH,\n          })}\n          onClick={() => {\n            setMethodSort(LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={() => {\n            setReverse(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(methodSort || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              sortAndReverse();\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}